# -*- coding: utf-8 -*-
"""Electric Vehicle Sales by State in India  project2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1psRlzdldb5ET8UQa0uX7TqB8NHdAVDP-

#**PROJECT 2 - ELECTRIC VEHICLE SALES BY STATE IN INDIA**

# **Import Required Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import wordcloud
import geopandas as gpd

"""# **Load the dataset**"""

data = pd.read_csv('/content/drive/MyDrive/Electric Vehicle Sales by State in India.csv')
data.head()

data.info()

data.shape

data.size

data.columns

data.describe()

data['Date'].describe()

data['Date'].info()

data['State'].describe()

data['State'].info()

data['Vehicle_Class'].describe()

data['Vehicle_Category'].describe()

data['Vehicle_Type'].describe()

data['EV_Sales_Quantity'].describe()

data

data['Vehicle_Class'].value_counts()

data['Vehicle_Type'].value_counts()

data['Vehicle_Category'].value_counts()

data['State'].value_counts()

data['Year'].value_counts()

"""# **Data Cleaning**"""

#Checking for missing values
print(data.isnull().sum())

data.info()

#Convert Date column in datetime format
data['Date'] = pd.to_datetime(data['Date'])

#Convert Year column in int
data['Year'] = data['Year'].astype(int)

#Convert other columns in category type
data['State'] = data['State'].astype('category')
data['Vehicle_Class'] = data['Vehicle_Class'].astype('category')
data['Vehicle_Type'] = data['Vehicle_Type'].astype('category')
data['Vehicle_Category'] = data['Vehicle_Category'].astype('category')
data['Month_Name'] = data['Month_Name'].astype('category')

data.info()

data.shape

#check for duplicates
duplicates = data.duplicated().sum()
print(duplicates)

#drop duplicates (if any)
data.drop_duplicates(inplace=True)
print(data.shape)

data.dtypes

"""# **Exploratory Data Analysis**"""

data.columns

#Yearly analysis of EV Sales in India
plt.figure(figsize=(6,4))
sns.lineplot(x='Year',y='EV_Sales_Quantity',data=data,marker='o',color='b')
plt.title('Yearly analysis of EV Sales in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Year',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.tight_layout()
plt.show()

#Monthly analysis of EV sales in India
plt.figure(figsize=(8,6))
sns.lineplot(x='Month_Name',y='EV_Sales_Quantity',data=data,marker='o',color='b')
plt.title('Monthly Analysis of EV Sales in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Month',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.tight_layout()
plt.show()

# Sort data by EV_Sales_Quantity in descending order
data_sorted = data.sort_values(by='EV_Sales_Quantity', ascending=False)
data_sorted

#State wise analysis of EV sales
statewise_sales = data.groupby('State')['EV_Sales_Quantity'].sum().reset_index()
statewise_sales.columns=['State','EV_Sales']
statewise_sales

# Sort by EV_Sales in descending order
data_sorted1 = statewise_sales.sort_values(by='EV_Sales', ascending=False)
data_sorted1

total_sales = data['EV_Sales_Quantity'].sum()
print("Total EV Sales:", total_sales)

#Plot State-wise analysis of EV sales
plt.figure(figsize=(10,10))
sns.barplot(x=statewise_sales['State'],y=statewise_sales['EV_Sales'],data=data_sorted1,hue='State',palette='muted',legend=False)
plt.title('State-wise Analysis of EV Sales in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('State',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

#State-wise analysis of EV sales
plt.figure(figsize=(12,13))
bars=plt.bar(x='State',height='EV_Sales',data=data_sorted1,color='b')
plt.title('State-wise analysis of EV sales in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('State',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90,ha='right')
 # Add labels **above** the bars
for bar in bars:
    height = bar.get_height()
    plt.text(
        bar.get_x() + bar.get_width() / 2,
        height + 500,                    # Slightly above the bar
        str(int(height)),
        ha='center',
        va='bottom',
        rotation=90,
        fontsize=8,
        fontweight='bold'
    )
plt.tight_layout()
plt.show()

#'Top 10 Indian States by EV Sales
Top_10_state=data_sorted1.head(10)
Top_10_state

#Top 10 Indian States by EV Sales
plt.figure(figsize=(8,6))
bars=plt.bar(x='State',height='EV_Sales',data=Top_10_state,color='b')
plt.title('Top 10 Indian States by EV Sales',fontsize=15,fontweight='bold',color='green')
plt.ylabel('State',fontsize=12,labelpad=10)
plt.xlabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90)
for bar in bars:                 # Add vertical labels inside bars
    height = bar.get_height()
    if height > 0:
        plt.text(
            bar.get_x() + bar.get_width() / 2,
            height * 0.5,                 # Middle of the bar
            str(int(height)),
            ha='center',
            va='center',
            fontsize=10,
            rotation=90,                 # Vertical text
            color='white',
            fontweight='bold'
        )
plt.tight_layout()
plt.show()

#State-wise analysis of EV sales
plt.figure(figsize=(10,8))
plt.bar(x='State',height='EV_Sales_Quantity',data=data_sorted,color='b')
plt.title('State-wise analysis of EV sales',fontsize=15,fontweight='bold',color='green')
plt.xlabel('State',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90,ha='right')
plt.tight_layout()
plt.show()

data.head()

# Group and sum EV sales by vehicle class
classwise_sales = data.groupby('Vehicle_Class')['EV_Sales_Quantity'].sum().reset_index()
classwise_sales = classwise_sales.sort_values(by='EV_Sales_Quantity', ascending=False)
classwise_sales

# Plot EV Sales by Vehicle Class
plt.figure(figsize=(15,10))
bars=plt.bar(x='Vehicle_Class',height='EV_Sales_Quantity',data=classwise_sales,color='b')
plt.title('EV Sales by Vehicle Class', fontsize=15, fontweight='bold', color='green')
plt.xlabel('Vehicle Class', fontsize=12)
plt.ylabel('EV Sales Quantity', fontsize=12)
plt.xticks(rotation=90, ha='right')
plt.xticks(fontsize=8)
for bar in bars:                 # Add vertical labels inside bars
    height = bar.get_height()
    if height > 0:
        plt.text(
            bar.get_x() + bar.get_width() / 2,
            height * 0.5,                 # Middle of the bar
            str(int(height)),
            ha='center',
            va='center',
            fontsize=8,
            rotation=90,                 # Vertical text
            color='white',
            fontweight='bold'
        )
plt.tight_layout()
plt.show()

#EV Sales Analysis by Vehicle Class
plt.figure(figsize=(15,12))
ax=sns.barplot(y=classwise_sales['Vehicle_Class'],x=classwise_sales['EV_Sales_Quantity'],data=classwise_sales,hue='Vehicle_Class',palette='bright',legend=False)
plt.title('EV Sales Analysis by Vehicle Class in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Vehicle Class',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90)
plt.yticks(fontsize=9)
for p in ax.patches:
    ax.text(p.get_width(), p.get_y() + p.get_height()/2,
            int(p.get_width()), ha='left', va='center')
plt.tight_layout()
plt.show()

Top_10_classwise_sales=classwise_sales.head(10)
Top_10_classwise_sales

#Plot for Top 10 Vehicle class wise EV sales
plt.figure(figsize=(8,8))
bars=plt.bar(x='Vehicle_Class',height='EV_Sales_Quantity',data=Top_10_classwise_sales,color='b')
plt.title('EV Sales Analysis: Top 10 Vehicle Classes in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Vehicle Class',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90,ha='right')
for bar in bars:
    height = bar.get_height()
    plt.text(
        bar.get_x() + bar.get_width() / 2,
        height + 500,                    # Slightly above the bar
        str(int(height)),
        ha='center',
        va='bottom',
        rotation=0,
        fontsize=8,
        fontweight='bold'
    )
plt.tight_layout()
plt.show()

# Group and sum EV sales by vehicle Category
Vehicle_category_sales = data.groupby('Vehicle_Category')['EV_Sales_Quantity'].sum().reset_index()
Vehicle_category_sales = Vehicle_category_sales.sort_values(by='EV_Sales_Quantity', ascending=False)
Vehicle_category_sales

#EV Sales Analysis by Vehicle Category in India
plt.figure(figsize=(8,6))
ax=sns.barplot(x='Vehicle_Category',y='EV_Sales_Quantity',data=Vehicle_category_sales,hue='Vehicle_Category',palette='bright')
plt.title('EV Sales Analysis by Vehicle Category in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Vehicle Category',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
for p in ax.patches:
    height = p.get_height()
    if height > 0:                                                        # Avoid labeling zero-height bars
        ax.text(
            p.get_x() + p.get_width() / 2.,                               # center text on bar
            height + 10,                                                   # slightly above bar
            int(height),                                                  # the count value
            ha="center", fontsize=10
        )

plt.tight_layout()
plt.show()

# Group and sum EV sales by vehicle Type
Vehicle_Type_sales = data.groupby('Vehicle_Type')['EV_Sales_Quantity'].sum().reset_index()
Vehicle_Type_sales = Vehicle_Type_sales.sort_values(by='EV_Sales_Quantity', ascending=False)
Vehicle_Type_sales

#EV Sales Analysis by Vehicle Type in India
plt.figure(figsize=(8,6))
ax=sns.barplot(x='Vehicle_Type',y='EV_Sales_Quantity',data=Vehicle_Type_sales,hue='Vehicle_Type',palette='bright',legend=False)
plt.title('EV Sales Analysis by Vehicle Type in India',fontsize=15,fontweight='bold',color='green')
plt.xlabel('Vehicle Type',fontsize=12,labelpad=10)
plt.ylabel('EV sales',fontsize=12,labelpad=10)
plt.xticks(rotation=90)
for p in ax.patches:
    height = p.get_height()
    if height > 0:                                                        # Avoid labeling zero-height bars
        ax.text(
            p.get_x() + p.get_width() / 2.,                               # center text on bar
            height + 20,                                                   # slightly above bar
            int(height),                                                  # the count value
            ha="center", fontsize=10
        )

plt.tight_layout()
plt.show()

#Heatmap for EV sales
# Group EV sales by State
statewise_sales = data.groupby('State')['EV_Sales_Quantity'].sum().reset_index()

# Pivot the data to make a 2D shape (needed for heatmap)
heatmap_data = statewise_sales.pivot_table(index='State', values='EV_Sales_Quantity')

# Plot heatmap
plt.figure(figsize=(8, 12))
sns.heatmap(heatmap_data, cmap='YlGnBu', annot=True, fmt=',', linewidths=0.5)

plt.title('EV Sales Heatmap by State', fontsize=16, fontweight='bold', color='green')
plt.xlabel('EV Sales')
plt.ylabel('State')
plt.tight_layout()
plt.show()

import pandas as pd
import plotly.express as px
# Step 1: Group by State and sum EV sales
statewise_sales = data.groupby('State')['EV_Sales_Quantity'].sum().reset_index()
statewise_sales = statewise_sales.sort_values(by='EV_Sales_Quantity', ascending=False)

# Step 2: Create interactive bar chart
fig = px.bar(
    statewise_sales,
    x='State',
    y='EV_Sales_Quantity',
    color='EV_Sales_Quantity',
    color_continuous_scale='Viridis',
    title='EV Sales by State in India',
    labels={'EV_Sales_Quantity': 'Total EV Sales', 'State': 'Indian States'},
    text='EV_Sales_Quantity'
)

# Step 3: Customize appearance
fig.update_traces(texttemplate='%{text:,}', textposition='outside')
fig.update_layout(
    xaxis_tickangle=-45,
    title_font_size=20,
    plot_bgcolor='rgba(0,0,0,0)',
    yaxis=dict(title='EV Sales', gridcolor='lightgray'),
    xaxis=dict(title='State'),
    uniformtext_minsize=8, uniformtext_mode='hide'
)
fig.show()

"""# **Final Conclusion**"""

import textwrap

conclusions = [

    "Total EV Sales Observed: 3,593,811 units\n",

    "Significant growth in EV sales observed after the year 2020.\n\n",

    "Top 5 States by EV Sales:\n"
    "   - Uttar Pradesh\n"
    "   - Maharashtra\n"
    "   - Karnataka\n"
    "   - Delhi\n"
    "   - Rajasthan\n\n",

    "Top Vehicle Classes:\n"
    "   - M-Cycle/Scooter (highest)\n"
    "   - E-Rickshaw (P)\n"
    "   - Motor Car\n\n",

    "Top Vehicle Categories:\n"
    "   - 2-Wheeler\n"
    "   - 3-Wheeler\n\n",

    "Top Vehicle Types:\n"
    "   - 2W_Personal\n"
    "   - 3W_Shared_Low Speed\n"
    "   - 4W_Personal\n\n",

    "EV sales have surged post-2020, with strong adoption in northern and urban states.\n",

    "Two-wheelers dominate the market, showing that affordability and last-mile mobility "
    "are key drivers of EV adoption.\n",

    "There is immense potential for growth in underperforming regions and vehicle types, "
    "especially as policy and infrastructure continue to improve.",
]

# Print each point in a formatted way
print("\n" + "="*50)
print("PROJECT CONCLUSION".center(50))
print("="*50+ "\n")

for i, point in enumerate(conclusions, start=1):
    wrapped_text = textwrap.fill(f"{i}. {point}", width=80)
    print(wrapped_text + "\n")


print("="*50)

"""---
**Project Completed By:**  
**Nitu Dave**  
*Google Data Analytics Certified | MSc Physics | Data Enthusiast*

"""